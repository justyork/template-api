name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup Go
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      # Step 3: Build the binary
      - name: Build application
        run: |
          go build -o api-template cmd/main.go
        env:
          CGO_ENABLED: 0
          GOOS: linux
          GOARCH: amd64

      # Step 4: Upload binary to the server
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Move to the deployment directory
            cd /develop/go-template-api

            # Stop the current application (if running)
            if [ -f api-template ]; then
              pkill -f api-template || true
            fi

            # Backup the old binary
            mv api-template api-template.bak || true

            # Upload the new binary
            rm -f api-template
            echo "${{ secrets.SERVER_USER }}: Uploaded new binary."

            # Run the new binary in the background
            nohup ./api-template > api-template.log 2>&1 &